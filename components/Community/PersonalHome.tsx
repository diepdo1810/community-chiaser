import { communityState } from "@/atoms/communitiesAtom";
import useCallCreatePost from "@/hooks/useCallCreatePost";
import { Button, Flex, Image, Stack, Text } from "@chakra-ui/react";
import React, { useState } from "react";
import { useRecoilValue } from "recoil";
import CreateCommunityModal from "../Modal/CreateCommunity/CreateCommunityModal";
import { isAdmin } from "../utils/authUtils";
import { MdKeyboardArrowLeft, MdKeyboardArrowRight } from "react-icons/md"

/**
 * Component for displaying card for creating a new community or post.
 * @returns {React.FC} Card for creating a new community or post.
 */
const PersonalHome: React.FC = () => {
  const [open, setOpen] = useState(false); // modal initially closed
  const mySnippets = useRecoilValue(communityState).mySnippets;

  const { onClick } = useCallCreatePost();


  const { showMore } = {
    showMore: () => {
      const description = document.getElementById("description");
      if (description) {
        description.style.webkitLineClamp = "unset";
      }
      const showMoreBtn = document.getElementById("showMoreBtn");
      const showLessBtn = document.getElementById("showLessBtn");
      if (showMoreBtn) {
          showMoreBtn.style.display = "none";
      }
      if (showLessBtn) {
          showLessBtn.style.display = "block";
      }
    },
  }

  const { showLess } = {
    showLess: () => {
      const description = document.getElementById("description");
      if (description) {
        description.style.webkitLineClamp = "4";
      }
      const showMoreBtn = document.getElementById("showMoreBtn");
      const showLessBtn = document.getElementById("showLessBtn");
      if (showMoreBtn) {
          showMoreBtn.style.display = "block";
      }
      if (showLessBtn) {
          showLessBtn.style.display = "none";
      }
    },
  };

  return (
    <>
      <CreateCommunityModal open={open} handleClose={() => setOpen(false)} />
      <Flex
        direction="column"
        bg="white"
        borderRadius={10}
        cursor="pointer"
        border="1px solid"
        borderColor="gray.300"
        position="sticky"
        shadow="md"
      >
        <Flex
          align="flex-end"
          color="white"
          p="6px 10px"
          bg="blue.500"
          height="34px"
          borderRadius="10px 10px 0px 0px"
          fontWeight={600}
          bgImage="url(/images/banners/small.jpg)"
          backgroundSize="cover"
        ></Flex>
        <Flex direction="column" p="12px">
          <Flex align="center" mb={2}>
            <Image
              src="/images/logo.svg"
              height="50px"
              alt="Website logo"
              mr={2}
            />
            <Text fontWeight={600}>üì± Gi·ªõi thi·ªáu v·ªÅ ·ª©ng d·ª•ng Cook</Text>
          </Flex>
          <Stack spacing={3}>
            <Text fontSize="9pt" 
              display="-webkit-box"
              style={{ 
                maxWidth: "400px",
                overflow: "hidden",
                textOverflow: "ellipsis",
                WebkitLineClamp: 4,
                WebkitBoxOrient: "vertical"
              }}
              id={"description"}
            >
                ·ª®ng d·ª•ng Cook l√† m·ªôt gi·∫£i ph√°p n·∫•u ƒÉn th√¥ng minh, 
                mang ƒë·∫øn cho b·∫°n m·ªôt kho t√†ng c√¥ng th·ª©c n·∫•u ƒÉn ƒëa d·∫°ng v√† h·∫•p d·∫´n. 
                ƒêi·ªÉm ƒë·∫∑c bi·ªát c·ªßa Cook ch√≠nh l√† kh·∫£ nƒÉng k·∫øt h·ª£p c√°c nguy√™n li·ªáu s·∫µn c√≥ trong t·ªß l·∫°nh c·ªßa b·∫°n nh∆∞ tr·ª©ng, h√†nh t√¢y, th·ªãt b√≤,‚Ä¶ 
                ƒë·ªÉ t·∫°o ra nh·ªØng m√≥n ƒÉn ngon l√†nh v√† ƒë·∫ßy ƒë·ªß dinh d∆∞·ª°ng.
                B·∫°n ch·ªâ c·∫ßn ch·ªçn c√°c nguy√™n li·ªáu, ·ª©ng d·ª•ng s·∫Ω g·ª£i √Ω c√¥ng th·ª©c v√† cung c·∫•p video h∆∞·ªõng d·∫´n chi ti·∫øt.
            </Text>

          <Stack direction='row' spacing={4}>
            <Button leftIcon={<MdKeyboardArrowRight />} colorScheme='blue' variant='solid' onClick={showMore} id={"showMoreBtn"}>
              Xem th√™m
            </Button>
            <Button leftIcon={<MdKeyboardArrowLeft />} display="none" colorScheme='blue' variant='solid' id={"showLessBtn"} onClick={showLess}>
              ·∫®n b·ªõt
            </Button>
          </Stack>
          
            <Button height="30px" onClick={onClick}>
              T·∫°o b√†i ƒëƒÉng
            </Button>
            {isAdmin() && (
              <Button
                variant="outline"
                height="30px"
                onClick={() => setOpen(true)}
              >
                T·∫°o c·ªông ƒë·ªìng
              </Button>
            )}
          </Stack>
        </Flex>
      </Flex>
    </>
  );
};
export default PersonalHome;
